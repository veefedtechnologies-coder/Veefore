import { Request, Response, Express } from 'express';
import { IStorage } from './storage';
import OpenAI from 'openai';

// Initialize OpenAI with the newest model gpt-4o which was released May 13, 2024. do not change this unless explicitly requested by the user
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY || ''
});

interface CopilotRequest {
  message: string;
  language?: string;
  context?: {
    currentPage?: string;
    userActions?: string[];
    workspaceId?: string;
  };
  conversationHistory?: Array<{
    role: 'user' | 'assistant';
    content: string;
  }>;
}

interface CopilotResponse {
  message: string;
  actions?: Array<{
    type: string;
    description: string;
    parameters: Record<string, any>;
  }>;
  suggestions?: string[];
  needsConfirmation?: boolean;
  language?: string;
}

// Multilingual system prompts
const getSystemPrompt = (language: string = 'en') => {
  const prompts = {
    en: `You are VeeFore AI Copilot, an intelligent assistant for social media management. You help users create content, schedule posts, analyze performance, set up automation, and manage their social media strategy across Instagram, YouTube, Twitter, and other platforms.

Key capabilities:
- Content creation (captions, hashtags, thumbnails, videos)
- Social media scheduling and publishing
- Analytics and performance insights
- Automation setup (DM responses, comment replies)
- Platform-specific optimization
- Team collaboration features

Always be helpful, professional, and focused on social media management tasks. Provide actionable suggestions and offer to execute tasks when possible. Use space/cosmic themes occasionally (üöÄ, ‚≠ê, üåü).`,

    es: `Eres VeeFore AI Copilot, un asistente inteligente para gesti√≥n de redes sociales. Ayudas a los usuarios a crear contenido, programar publicaciones, analizar rendimiento, configurar automatizaci√≥n y gestionar su estrategia de redes sociales en Instagram, YouTube, Twitter y otras plataformas.

Capacidades clave:
- Creaci√≥n de contenido (leyendas, hashtags, miniaturas, videos)
- Programaci√≥n y publicaci√≥n en redes sociales
- An√°lisis e insights de rendimiento
- Configuraci√≥n de automatizaci√≥n (respuestas DM, respuestas a comentarios)
- Optimizaci√≥n espec√≠fica por plataforma
- Funciones de colaboraci√≥n en equipo

Siempre s√© √∫til, profesional y enf√≥cate en tareas de gesti√≥n de redes sociales. Proporciona sugerencias accionables y ofrece ejecutar tareas cuando sea posible.`,

    fr: `Tu es VeeFore AI Copilot, un assistant intelligent pour la gestion des m√©dias sociaux. Tu aides les utilisateurs √† cr√©er du contenu, programmer des publications, analyser les performances, configurer l'automatisation et g√©rer leur strat√©gie de m√©dias sociaux sur Instagram, YouTube, Twitter et d'autres plateformes.

Capacit√©s cl√©s:
- Cr√©ation de contenu (l√©gendes, hashtags, miniatures, vid√©os)
- Programmation et publication sur les m√©dias sociaux
- Analyses et insights de performance
- Configuration d'automatisation (r√©ponses DM, r√©ponses aux commentaires)
- Optimisation sp√©cifique par plateforme
- Fonctionnalit√©s de collaboration d'√©quipe

Sois toujours utile, professionnel et concentr√© sur les t√¢ches de gestion des m√©dias sociaux. Fournis des suggestions exploitables et propose d'ex√©cuter des t√¢ches quand c'est possible.`,

    de: `Du bist VeeFore AI Copilot, ein intelligenter Assistent f√ºr Social-Media-Management. Du hilfst Benutzern dabei, Inhalte zu erstellen, Posts zu planen, Leistung zu analysieren, Automatisierung einzurichten und ihre Social-Media-Strategie auf Instagram, YouTube, Twitter und anderen Plattformen zu verwalten.

Hauptf√§higkeiten:
- Inhaltserstellung (Bildunterschriften, Hashtags, Thumbnails, Videos)
- Social-Media-Planung und -Ver√∂ffentlichung
- Analyse und Leistungseinblicke
- Automatisierung einrichten (DM-Antworten, Kommentarantworten)
- Plattformspezifische Optimierung
- Team-Kollaborationsfunktionen

Sei immer hilfreich, professionell und fokussiert auf Social-Media-Management-Aufgaben. Biete umsetzbare Vorschl√§ge und biete an, Aufgaben auszuf√ºhren, wenn m√∂glich.`,

    hi: `‡§Ü‡§™ VeeFore AI Copilot ‡§π‡•à‡§Ç, ‡§∏‡•ã‡§∂‡§≤ ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø‡§Æ‡§æ‡§® ‡§∏‡§π‡§æ‡§Ø‡§ï‡•§ ‡§Ü‡§™ ‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á, ‡§™‡•ã‡§∏‡•ç‡§ü ‡§∂‡•á‡§°‡•ç‡§Ø‡•Ç‡§≤ ‡§ï‡§∞‡§®‡•á, ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§® ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§∞‡§®‡•á, ‡§ë‡§ü‡•ã‡§Æ‡•á‡§∂‡§® ‡§∏‡•á‡§ü‡§Ö‡§™ ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ Instagram, YouTube, Twitter ‡§î‡§∞ ‡§Ö‡§®‡•ç‡§Ø ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§™‡§∞ ‡§Ö‡§™‡§®‡•Ä ‡§∏‡•ã‡§∂‡§≤ ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§∞‡§£‡§®‡•Ä‡§§‡§ø ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§

‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§ï‡•ç‡§∑‡§Æ‡§§‡§æ‡§è‡§Ç:
- ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ (‡§ï‡•à‡§™‡•ç‡§∂‡§®, ‡§π‡•à‡§∂‡§ü‡•à‡§ó, ‡§•‡§Ç‡§¨‡§®‡•á‡§≤, ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã)
- ‡§∏‡•ã‡§∂‡§≤ ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§∂‡•á‡§°‡•ç‡§Ø‡•Ç‡§≤‡§ø‡§Ç‡§ó ‡§î‡§∞ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∂‡§®
- ‡§è‡§®‡§æ‡§≤‡§ø‡§ü‡§ø‡§ï‡•ç‡§∏ ‡§î‡§∞ ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§® ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§¶‡•É‡§∑‡•ç‡§ü‡§ø
- ‡§ë‡§ü‡•ã‡§Æ‡•á‡§∂‡§® ‡§∏‡•á‡§ü‡§Ö‡§™ (DM ‡§â‡§§‡•ç‡§§‡§∞, ‡§ï‡§Æ‡•á‡§Ç‡§ü ‡§â‡§§‡•ç‡§§‡§∞)
- ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ-‡§µ‡§ø‡§∂‡§ø‡§∑‡•ç‡§ü ‡§Ö‡§®‡•Å‡§ï‡•Ç‡§≤‡§®
- ‡§ü‡•Ä‡§Æ ‡§∏‡§π‡§Ø‡•ã‡§ó ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ‡§è‡§Ç

‡§π‡§Æ‡•á‡§∂‡§æ ‡§∏‡§π‡§æ‡§Ø‡§ï, ‡§™‡•á‡§∂‡•á‡§µ‡§∞ ‡§¨‡§®‡•á‡§Ç ‡§î‡§∞ ‡§∏‡•ã‡§∂‡§≤ ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§ï‡§æ‡§∞‡•ç‡§Ø‡•ã‡§Ç ‡§™‡§∞ ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞‡§ø‡§§ ‡§∞‡§π‡•á‡§Ç‡•§ ‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ‡§®‡•ç‡§µ‡§ø‡§§ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§∏‡§Ç‡§≠‡§µ ‡§π‡•ã‡§®‡•á ‡§™‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§®‡§ø‡§∑‡•ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§`,

    zh: `‰Ω†ÊòØVeeFore AI CopilotÔºå‰∏Ä‰∏™Êô∫ËÉΩÁ§æ‰∫§Â™í‰ΩìÁÆ°ÁêÜÂä©Êâã„ÄÇ‰Ω†Â∏ÆÂä©Áî®Êà∑ÂàõÂª∫ÂÜÖÂÆπ„ÄÅÂÆâÊéíÂ∏ñÂ≠ê„ÄÅÂàÜÊûêË°®Áé∞„ÄÅËÆæÁΩÆËá™Âä®ÂåñÔºåÂπ∂Âú®Instagram„ÄÅYouTube„ÄÅTwitterÂíåÂÖ∂‰ªñÂπ≥Âè∞‰∏äÁÆ°ÁêÜ‰ªñ‰ª¨ÁöÑÁ§æ‰∫§Â™í‰ΩìÁ≠ñÁï•„ÄÇ

‰∏ªË¶ÅÂäüËÉΩÔºö
- ÂÜÖÂÆπÂàõÂª∫ÔºàÊ†áÈ¢ò„ÄÅÊ†áÁ≠æ„ÄÅÁº©Áï•Âõæ„ÄÅËßÜÈ¢ëÔºâ
- Á§æ‰∫§Â™í‰ΩìÂÆâÊéíÂíåÂèëÂ∏É
- ÂàÜÊûêÂíåË°®Áé∞Ê¥ûÂØü
- Ëá™Âä®ÂåñËÆæÁΩÆÔºàÁßÅ‰ø°ÂõûÂ§ç„ÄÅËØÑËÆ∫ÂõûÂ§çÔºâ
- Âπ≥Âè∞ÁâπÂÆö‰ºòÂåñ
- Âõ¢ÈòüÂçè‰ΩúÂäüËÉΩ

ÂßãÁªà‰øùÊåÅÊúâÁî®„ÄÅ‰∏ì‰∏öÔºå‰∏ìÊ≥®‰∫éÁ§æ‰∫§Â™í‰ΩìÁÆ°ÁêÜ‰ªªÂä°„ÄÇÊèê‰æõÂèØÊìç‰ΩúÁöÑÂª∫ËÆÆÔºåÂπ∂Âú®ÂèØËÉΩÊó∂Êèê‰æõÊâßË°å‰ªªÂä°„ÄÇ`,

    ja: `„ÅÇ„Å™„Åü„ÅØVeeFore AI Copilot„Åß„Åô„ÄÇ„ÇΩ„Éº„Ç∑„É£„É´„É°„Éá„Ç£„Ç¢ÁÆ°ÁêÜ„ÅÆ„Åü„ÇÅ„ÅÆ„Ç§„É≥„ÉÜ„É™„Ç∏„Çß„É≥„Éà„Ç¢„Ç∑„Çπ„Çø„É≥„Éà„Åß„Åô„ÄÇ„É¶„Éº„Ç∂„Éº„Åå„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Çí‰ΩúÊàê„Åó„ÄÅÊäïÁ®ø„Çí„Çπ„Ç±„Ç∏„É•„Éº„É´„Åó„ÄÅ„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÇíÂàÜÊûê„Åó„ÄÅËá™ÂãïÂåñ„ÇíË®≠ÂÆö„Åó„ÄÅInstagram„ÄÅYouTube„ÄÅTwitter„ÄÅ„Åù„ÅÆ‰ªñ„ÅÆ„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†„Åß„ÇΩ„Éº„Ç∑„É£„É´„É°„Éá„Ç£„Ç¢Êà¶Áï•„ÇíÁÆ°ÁêÜ„Åô„Çã„ÅÆ„ÇíÊîØÊè¥„Åó„Åæ„Åô„ÄÇ

‰∏ª„Å™Ê©üËÉΩÔºö
- „Ç≥„É≥„ÉÜ„É≥„ÉÑ‰ΩúÊàêÔºà„Ç≠„É£„Éó„Ç∑„Éß„É≥„ÄÅ„Éè„ÉÉ„Ç∑„É•„Çø„Ç∞„ÄÅ„Çµ„É†„Éç„Ç§„É´„ÄÅÂãïÁîªÔºâ
- „ÇΩ„Éº„Ç∑„É£„É´„É°„Éá„Ç£„Ç¢„ÅÆ„Çπ„Ç±„Ç∏„É•„Éº„É™„É≥„Ç∞„Å®ÂÖ¨Èñã
- ÂàÜÊûê„Å®„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÅÆÊ¥ûÂØü
- Ëá™ÂãïÂåñË®≠ÂÆöÔºàDM„É¨„Çπ„Éù„É≥„Çπ„ÄÅ„Ç≥„É°„É≥„ÉàËøî‰ø°Ôºâ
- „Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†Âõ∫Êúâ„ÅÆÊúÄÈÅ©Âåñ
- „ÉÅ„Éº„É†„Ç≥„É©„Éú„É¨„Éº„Ç∑„Éß„É≥Ê©üËÉΩ

Â∏∏„Å´ÂΩπÁ´ã„Å°„ÄÅ„Éó„É≠„Éï„Çß„ÉÉ„Ç∑„Éß„Éä„É´„Åß„ÄÅ„ÇΩ„Éº„Ç∑„É£„É´„É°„Éá„Ç£„Ç¢ÁÆ°ÁêÜ„Çø„Çπ„ÇØ„Å´ÁÑ¶ÁÇπ„ÇíÂΩì„Å¶„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇÂÆüË°åÂèØËÉΩ„Å™ÊèêÊ°à„ÇíÊèê‰æõ„Åó„ÄÅÂèØËÉΩ„Å™Â†¥Âêà„ÅØ„Çø„Çπ„ÇØ„ÅÆÂÆüË°å„ÇíÁî≥„ÅóÂá∫„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`,

    ar: `ÿ£ŸÜÿ™ VeeFore AI Copilotÿå ŸÖÿ≥ÿßÿπÿØ ÿ∞ŸÉŸä ŸÑÿ•ÿØÿßÿ±ÿ© Ÿàÿ≥ÿßÿ¶ŸÑ ÿßŸÑÿ™ŸàÿßÿµŸÑ ÿßŸÑÿßÿ¨ÿ™ŸÖÿßÿπŸä. ÿ™ÿ≥ÿßÿπÿØ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ŸÅŸä ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑŸÖÿ≠ÿ™ŸàŸâ Ÿàÿ¨ÿØŸàŸÑÿ© ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±ÿßÿ™ Ÿàÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿ£ÿØÿßÿ° Ÿàÿ•ÿπÿØÿßÿØ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿ™ŸÑŸÇÿßÿ¶Ÿä Ÿàÿ•ÿØÿßÿ±ÿ© ÿßÿ≥ÿ™ÿ±ÿßÿ™Ÿäÿ¨Ÿäÿ© Ÿàÿ≥ÿßÿ¶ŸÑ ÿßŸÑÿ™ŸàÿßÿµŸÑ ÿßŸÑÿßÿ¨ÿ™ŸÖÿßÿπŸä ÿπÿ®ÿ± Instagram ŸàYouTube ŸàTwitter ŸàÿßŸÑŸÖŸÜÿµÿßÿ™ ÿßŸÑÿ£ÿÆÿ±Ÿâ.

ÿßŸÑŸÇÿØÿ±ÿßÿ™ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©:
- ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑŸÖÿ≠ÿ™ŸàŸâ (ÿßŸÑÿ™ÿ≥ŸÖŸäÿßÿ™ ÿßŸÑÿ™Ÿàÿ∂Ÿäÿ≠Ÿäÿ©ÿå ÿßŸÑŸáÿßÿ¥ÿ™ÿßÿ∫ÿßÿ™ÿå ÿßŸÑÿµŸàÿ± ÿßŸÑŸÖÿµÿ∫ÿ±ÿ©ÿå ÿßŸÑŸÅŸäÿØŸäŸàŸáÿßÿ™)
- ÿ¨ÿØŸàŸÑÿ© ŸàŸÜÿ¥ÿ± Ÿàÿ≥ÿßÿ¶ŸÑ ÿßŸÑÿ™ŸàÿßÿµŸÑ ÿßŸÑÿßÿ¨ÿ™ŸÖÿßÿπŸä
- ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑÿßÿ™ Ÿàÿ±ÿ§Ÿâ ÿßŸÑÿ£ÿØÿßÿ°
- ÿ•ÿπÿØÿßÿØ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿ™ŸÑŸÇÿßÿ¶Ÿä (ÿ±ÿØŸàÿØ ÿßŸÑÿ±ÿ≥ÿßÿ¶ŸÑ ÿßŸÑŸÖÿ®ÿßÿ¥ÿ±ÿ©ÿå ÿ±ÿØŸàÿØ ÿßŸÑÿ™ÿπŸÑŸäŸÇÿßÿ™)
- ÿßŸÑÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑÿÆÿßÿµ ÿ®ÿßŸÑŸÖŸÜÿµÿ©
- ŸÖŸäÿ≤ÿßÿ™ ÿßŸÑÿ™ÿπÿßŸàŸÜ ÿßŸÑÿ¨ŸÖÿßÿπŸä

ŸÉŸÜ ÿØÿßÿ¶ŸÖÿßŸã ŸÖŸÅŸäÿØÿßŸã ŸàŸÖŸáŸÜŸäÿßŸã ŸàŸÖÿ±ŸÉÿ≤ÿßŸã ÿπŸÑŸâ ŸÖŸáÿßŸÖ ÿ•ÿØÿßÿ±ÿ© Ÿàÿ≥ÿßÿ¶ŸÑ ÿßŸÑÿ™ŸàÿßÿµŸÑ ÿßŸÑÿßÿ¨ÿ™ŸÖÿßÿπŸä. ŸÇÿØŸÖ ÿßŸÇÿ™ÿ±ÿßÿ≠ÿßÿ™ ŸÇÿßÿ®ŸÑÿ© ŸÑŸÑÿ™ŸÜŸÅŸäÿ∞ Ÿàÿßÿπÿ±ÿ∂ ÿ™ŸÜŸÅŸäÿ∞ ÿßŸÑŸÖŸáÿßŸÖ ÿπŸÜÿØ ÿßŸÑÿ•ŸÖŸÉÿßŸÜ.`
  };

  return prompts[language as keyof typeof prompts] || prompts.en;
};

// Content generation prompts
const getContentPrompts = (language: string = 'en') => {
  const prompts = {
    en: {
      caption: "Create an engaging social media caption",
      hashtags: "Generate relevant hashtags",
      script: "Write a video script",
      thumbnail: "Describe a thumbnail design",
      brief: "Create a content brief"
    },
    es: {
      caption: "Crear una leyenda atractiva para redes sociales",
      hashtags: "Generar hashtags relevantes",
      script: "Escribir un gui√≥n de video",
      thumbnail: "Describir un dise√±o de miniatura",
      brief: "Crear un brief de contenido"
    },
    fr: {
      caption: "Cr√©er une l√©gende engageante pour les m√©dias sociaux",
      hashtags: "G√©n√©rer des hashtags pertinents",
      script: "√âcrire un script vid√©o",
      thumbnail: "D√©crire un design de miniature",
      brief: "Cr√©er un brief de contenu"
    },
    hi: {
      caption: "‡§è‡§ï ‡§Ü‡§ï‡§∞‡•ç‡§∑‡§ï ‡§∏‡•ã‡§∂‡§≤ ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§¨‡§®‡§æ‡§è‡§Ç",
      hashtags: "‡§™‡•ç‡§∞‡§æ‡§∏‡§Ç‡§ó‡§ø‡§ï ‡§π‡•à‡§∂‡§ü‡•à‡§ó ‡§¨‡§®‡§æ‡§è‡§Ç",
      script: "‡§è‡§ï ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§∏‡•ç‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§ü ‡§≤‡§ø‡§ñ‡•á‡§Ç",
      thumbnail: "‡§è‡§ï ‡§•‡§Ç‡§¨‡§®‡•á‡§≤ ‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§ï‡§æ ‡§µ‡§∞‡•ç‡§£‡§® ‡§ï‡§∞‡•á‡§Ç",
      brief: "‡§è‡§ï ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§¨‡•ç‡§∞‡•Ä‡§´ ‡§¨‡§®‡§æ‡§è‡§Ç"
    }
  };
  
  return prompts[language as keyof typeof prompts] || prompts.en;
};

// Process user message with OpenAI
async function processMessage(req: CopilotRequest): Promise<CopilotResponse> {
  const { message, language = 'en', context } = req;
  
  if (!process.env.OPENAI_API_KEY) {
    throw new Error('OpenAI API key not configured');
  }

  try {
    // Prepare the conversation messages
    const messages: any[] = [
      {
        role: 'system',
        content: getSystemPrompt(language)
      }
    ];

    // Add context if available
    if (context) {
      const contextMessage = `Current context: Page: ${context.currentPage || 'unknown'}, Workspace: ${context.workspaceId || 'unknown'}`;
      messages.push({
        role: 'system',
        content: contextMessage
      });
    }

    // Add user message
    messages.push({
      role: 'user',
      content: message
    });

    // Call OpenAI API with gpt-4o model
    const response = await openai.chat.completions.create({
      model: "gpt-4o", // the newest OpenAI model is "gpt-4o" which was released May 13, 2024. do not change this unless explicitly requested by the user
      messages: messages,
      max_tokens: 2000,
      temperature: 0.7,
      stream: false
    });

    const aiResponse = response.choices[0]?.message?.content;
    
    if (!aiResponse) {
      throw new Error('No response from OpenAI');
    }

    return {
      message: aiResponse,
      actions: [],
      suggestions: [],
      needsConfirmation: false,
      language: language
    };

  } catch (error) {
    console.error('OpenAI API error:', error);
    
    // Fallback response in the user's language
    const fallbackMessages = {
      en: "I'm having trouble connecting to my AI services right now. Please try again in a moment, or let me know how I can help you with your social media management tasks.",
      es: "Tengo problemas para conectarme a mis servicios de IA en este momento. Int√©ntalo de nuevo en un momento, o d√©jame saber c√≥mo puedo ayudarte con tus tareas de gesti√≥n de redes sociales.",
      fr: "J'ai des difficult√©s √† me connecter √† mes services IA en ce moment. Veuillez r√©essayer dans un moment, ou dites-moi comment je peux vous aider avec vos t√¢ches de gestion des m√©dias sociaux.",
      hi: "‡§Æ‡•Å‡§ù‡•á ‡§Ö‡§≠‡•Ä ‡§Ö‡§™‡§®‡•Ä AI ‡§∏‡•á‡§µ‡§æ‡§ì‡§Ç ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡§®‡•á ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§è‡§ï ‡§ï‡•ç‡§∑‡§£ ‡§Æ‡•á‡§Ç ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç, ‡§Ø‡§æ ‡§Æ‡•Å‡§ù‡•á ‡§¨‡§§‡§æ‡§è‡§Ç ‡§ï‡§ø ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•á ‡§∏‡•ã‡§∂‡§≤ ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§ï‡§æ‡§∞‡•ç‡§Ø‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç‡•§"
    };
    
    return {
      message: fallbackMessages[language as keyof typeof fallbackMessages] || fallbackMessages.en,
      language: language
    };
  }
}

// Create copilot routes
export function createCopilotRoutes(app: Express, storage: IStorage) {
  // P3 SECURITY: Register Privacy & GDPR Routes
  const registerPrivacyRoutes = async () => {
    try {
      const privacyModule = await import('./routes/privacy');
      app.use('/api/privacy', privacyModule.default);
      console.log('‚úÖ P3: Privacy & GDPR API routes registered');
    } catch (error) {
      console.error('‚ùå P3: Failed to register privacy routes:', error);
    }
  };
  registerPrivacyRoutes();
  // Chat endpoint
  app.post('/api/copilot/chat', async (req: any, res: Response) => {
    try {
      const { message, language, context } = req.body;

      if (!message?.trim()) {
        return res.status(400).json({ error: 'Message is required' });
      }

      // Parse context if it's a string
      let parsedContext;
      try {
        parsedContext = typeof context === 'string' ? JSON.parse(context) : context;
      } catch (error) {
        parsedContext = {};
      }

      const copilotRequest: CopilotRequest = {
        message: message.trim(),
        language: language || 'en',
        context: parsedContext
      };

      const response = await processMessage(copilotRequest);
      res.json(response);

    } catch (error) {
      console.error('Copilot chat error:', error);
      res.status(500).json({ 
        error: 'Internal server error',
        message: 'Sorry, I encountered an error. Please try again.'
      });
    }
  });

  // Generate content endpoint
  app.post('/api/copilot/generate', async (req: any, res: Response) => {
    try {
      const { type, prompt, language = 'en', platform, context } = req.body;

      if (!type || !prompt) {
        return res.status(400).json({ error: 'Type and prompt are required' });
      }

      const contentPrompts = getContentPrompts(language);
      const systemPrompt = getSystemPrompt(language);
      
      let fullPrompt = `${systemPrompt}\n\nTask: ${contentPrompts[type as keyof typeof contentPrompts] || type}\nPrompt: ${prompt}`;
      
      if (platform) {
        fullPrompt += `\nPlatform: ${platform}`;
      }
      
      if (context) {
        fullPrompt += `\nContext: ${JSON.stringify(context)}`;
      }

      const response = await openai.chat.completions.create({
        model: "gpt-4o", // the newest OpenAI model is "gpt-4o" which was released May 13, 2024. do not change this unless explicitly requested by the user
        messages: [
          { role: 'user', content: fullPrompt }
        ],
        max_tokens: 1500,
        temperature: 0.8
      });

      const generatedContent = response.choices[0]?.message?.content;

      res.json({
        content: generatedContent,
        type: type,
        language: language
      });

    } catch (error) {
      console.error('Content generation error:', error);
      res.status(500).json({ 
        error: 'Failed to generate content',
        message: 'Sorry, I couldn\'t generate that content. Please try again.'
      });
    }
  });

  // Analyze content endpoint
  app.post('/api/copilot/analyze', async (req: any, res: Response) => {
    try {
      const { content, language = 'en' } = req.body;

      if (!content) {
        return res.status(400).json({ error: 'Content is required' });
      }

      let analysisPrompt = `Analyze this content for social media optimization and provide suggestions:\n\n${content}`;
      
      const response = await openai.chat.completions.create({
        model: "gpt-4o", // the newest OpenAI model is "gpt-4o" which was released May 13, 2024. do not change this unless explicitly requested by the user
        messages: [
          { role: 'system', content: getSystemPrompt(language) },
          { role: 'user', content: analysisPrompt }
        ],
        max_tokens: 1000
      });

      const analysis = response.choices[0]?.message?.content;
      return res.json({
        analysis: analysis,
        type: 'text',
        language: language
      });

    } catch (error) {
      console.error('Content analysis error:', error);
      res.status(500).json({ 
        error: 'Failed to analyze content',
        message: 'Sorry, I couldn\'t analyze that content. Please try again.'
      });
    }
  });

  console.log('‚úÖ AI Copilot routes registered successfully');
}